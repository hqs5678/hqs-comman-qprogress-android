apply plugin: 'com.android.library'
apply plugin: 'com.novoda.bintray-release'

version = '1.0.16'
def vc = 10016

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionCode vc
        versionName version

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    api 'com.android.support:appcompat-v7:28.0.0'
    api 'com.android.support:cardview-v7:28.0.0'
    api 'com.pnikosis:materialish-progress:1.7'
    api 'com.github.lzyzsd:circleprogress:1.1.0'
    api 'com.hqs.common:hqs-common:1.1.23'
}

publish {
    userOrg = 'huangqingsong'
    artifactId = 'hqs-common'
    groupId = 'com.hqs.common.helper.qprogress'
    uploadName = 'qprogress'
    publishVersion = version
    desc = 'android progress dialog'
    website = 'https://github.com/zzyyppqq/CardViewShadowColor'
    licences = ['Apache-2.0']
}




//Properties properties = new Properties()//读取properties的配置信息，当然直接把信息写到代码里也是可以的
//properties.load(project.rootProject.file('local.properties').newDataInputStream())
//
//bintray {
//    user = properties.getProperty("bintray.user")
//    key = properties.getProperty("bintray.apikey")
//    configurations = ['archives']
//    pkg {
//        userOrg="huangqingsong"
//        repo = "hqs-common"         //这个应该是传到maven的仓库的
//        name = "qprogress"    //发布的项目名字
//        websiteUrl = siteUrl
//        vcsUrl = gitUrl
//        licenses = ["Apache-2.0"]
//        publish = true
//    }
//}
//
//
//task javadoc(type: Javadoc) {
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//}
//
//task sourcesJar(type: Jar) {
//    from android.sourceSets.main.java.srcDirs
//    classifier = 'sources'
//}
//
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}
//artifacts {
//    archives javadocJar
//    archives sourcesJar
//}